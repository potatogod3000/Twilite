@{
    PostInfoModel Post = ViewBag.Post;
    ReplyInfoModel SelectedReply = ViewBag.Reply;
    ViewData["Title"] = $"{Post.UserName}'s Post";
}

<script>
    const postIds = [];
    const replyIds = [];
</script>

@* Show current post *@
<div class="container-fluid">
    <div id="posts-area" class="row justify-content-center">
        @await Component.InvokeAsync("Posts", Post)
    </div>
</div>

@* Display Replies for the post *@
<div class="card my-3">
    <div class="card-header">
        
        <div class="display-6 text-center">
            Replies
            <button class="btn btn-primary float-end mt-1" type="button" data-bs-toggle="collapse" data-bs-target="#RichEditor" aria-expanded="false" aria-controls="RichEditor">Reply</button>
        </div>
    </div>

    @* Collapsing Rich Editor area *@
    <div class="mx-2 collapse p-2" id="RichEditor">
        <partial class="pb-2" name="_RichEditor"/>
        <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-primary" id="submit-reply-button">Submit Reply</button>
        </div>
    </div>

    @* Display Replies *@
    <div class="card-body">
        @* Display the following when there are no replies to a post *@
        @if(Post.Replies == null || Post.Replies.Count() == 0) {
            <div class="text-muted text-center my-5">
                There are no replies to this post yet
            </div>
        }

        @* Display the following when there are/is replies to a post *@
        else {

            @* Display the following when the user has selected a single reply *@
            if(SelectedReply != null) {
                <div style="border-color: var(--bs-primary)">
                    @await Component.InvokeAsync("Replies", new{
                        Reply = SelectedReply
                    })
                </div>

                <div class="d-flex justify-content-center">
                    <button type="button" id="load-all-replies" class="mt-2 btn btn-primary">Load all replies</button>
                </div>
            }

            @* Display the following to view all replies to the post *@
            else {
                @foreach(var Reply in Post.Replies) {
                    @await Component.InvokeAsync("Replies", new{
                        Reply = Reply
                    })
                }
            }
        }
    </div>
</div>

<script type="text/javascript">
    const postIdArr = [];
    postIds.push(@Post.PostId);
    let button = document.getElementById("submit-reply-button");
    button.addEventListener("click", () => ReplyPost(postArea.innerHTML, @Post.PostId));
</script>

<script src="~/js/Notifications.js"></script>
<script src="~/js/LikePost.js"></script>
<script src="~/js/Reply.js"></script>
<script src="~/js/Share.js"></script>
