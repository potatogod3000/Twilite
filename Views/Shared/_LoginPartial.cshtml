@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @if (ViewData["Title"] != "Home" && ViewData["Title"] != "Create Post") {
        <a id="manage" class="nav-link btn btn-sm btn-primary mx-2 text-white" asp-controller="Post" asp-action="CreatePost" title="Create a New Post">
            <i class="bi bi-pencil-square mx-1 my-1"></i></a>
        }
    </li>
    <li class="nav-item">
        <a id="manage" class="nav-link text-light" asp-controller="Profile" asp-action="CurrentUserProfile" title="Manage Profile">Profile</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-light border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
