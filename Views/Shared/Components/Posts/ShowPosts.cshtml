@{
    IEnumerable<PostInfoModel> PostInfoObj = ViewData["PostInfoObj"] as IEnumerable<PostInfoModel>;
}

<script type="text/javascript">
    let postIdArr = [];
</script>

@foreach(var obj in PostInfoObj) {
    <div class="card col-sm-11 mx-2 my-1">
        <div class="card-body pb-2">
            
            @* Display user actions i.e., dropdown of actions for current post and user *@
            <div class="row">
                <div class="col-12">
                    @await Component.InvokeAsync("UserActions", obj)
                </div>

                <div class="col-12">
                    @* Show posted and edited date. *@
                    <span class="text-muted" style="font-size: 13px">
                        Posted: @obj.PostedDate
                    </span>

                    @if(obj.PostEditedDate != null) {
                        <i class="bi bi-dot text-muted"></i>
                        <span class="text-muted" style="font-size: 13px">
                            Edited: @obj.PostEditedDate
                        </span>
                    }
                </div>
            </div>

            @* Render the body of post after converting HTML content to plain text *@
            <div class="card my-2 p-2 border-top border-bottom border-0">
                <p class="card-text">@Html.Raw(obj.PostContent)</p>
            </div>

            @* Post action buttons i.e., Like, Reply and Share *@
            <div class="row text-center mb-2">

                <div class="col-4">
                    <a asp-controller="Post" asp-action="Replies" asp-route-PostId="@obj.PostId">
                        <i class="bi bi-chat-left-text" id="reply-button" title="Replies"></i>
                    </a>
                </div>

                @* Display post likes *@
                <div class="col-4">
                    @if(!User.Identity.IsAuthenticated) {
                        <a asp-area="Identity" asp-page="/Account/Login">
                            <i class="bi bi-heart" title="Login to Like this Post"></i>
                        </a>
                        <span class="text-end" style="font-weight: normal; font-size: 16px" id="like-display">@obj.Likes.Count()</span>
                    }
                    
                    else if(User.Identity.IsAuthenticated && User.Identity.Name != obj.UserName) {
                        if(obj.Likes.Contains(User.Identity.Name)) {
                            <i id="like-button" class="bi bi-heart-fill text-primary" title="Remove Like"></i>
                            <span class="text-end" style="font-weight: normal; font-size: 16px" id="like-display">@obj.Likes.Count()</span>
                        } else {
                            <i id="like-button" class="bi bi-heart text-primary" title="Like Post"></i>
                            <span class="text-end" style="font-weight: normal; font-size: 16px" id="like-display">@obj.Likes.Count()</span>
                        }
                    }
                    
                    else if(User.Identity.Name == obj.UserName) {
                        <i id="like-button" class="bi bi-heart text-primary" title="You cannot like your own post"></i>
                        <span class="text-end" style="font-weight: normal; font-size: 16px" id="like-display">@obj.Likes.Count()</span>
                    }
                </div>

                <div class="col-4">
                    <i class="bi bi-share text-primary" id="share-button" title="Share the Post"></i>
                </div>
            
            </div>

        </div>

    </div>

    <script type="text/javascript">
        @* Pushing the PostId of each Post sequencially to postIdArr array for use in LikePost.js *@
        postIdArr.push(@obj.PostId);
    </script>
}

<script src="~/js/LikePost.js"></script>
